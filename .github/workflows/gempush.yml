name: cfn_nag

on:
  push:
    branches:
      - master
env:
  docker_org: stelligent

jobs:
  commit:
    name: Commit
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master
    - name: Set up Ruby 2.5
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.5.x
    - name: Install Bundler
      run: gem install bundler
    - name: Which bundler?
      run: bundle -v
    - name: Bundle install
      run: bundle check || bundle install
    - name: Rubocop lint
      run: bundle exec rubocop -D
    - name: Rspec tests
      run: bundle exec rspec --require spec_helper spec
    - name: Duplicate rule check
      run: bundle exec ./bin/cfn_nag_rules

  acceptance:
    name: Acceptance
    runs-on: ubuntu-latest

    steps:
    # is this the same commit hash we saw in commit?
    - uses: actions/checkout@master
    - name: Set up Ruby 2.5
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.5.x
    - name: Install Bundler
      run: gem install bundler
    - name: e2e
      run: bash ./scripts/setup_and_run_end_to_end_tests.sh

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [commit, acceptance]
    steps:
      # is this the same commit hash we saw in commit?
      - uses: actions/checkout@v2
      - run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          git fetch --prune --unshallow
      - name: Set up Ruby 2.5
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.5.x
      - name: Publish to RubyGems and DockerHub
        id: publish
        run: bash ./scripts/publish.sh
        env:
          rubygems_api_key: ${{secrets.rubygems_api_key}}
          docker_user: ${{secrets.docker_user}}
          docker_password: ${{secrets.docker_password}}
      - name: Create binary artifact
        run: |
          gem install cfn-nag
          gem list
          echo $GITHUB_REF
          cd ${{ steps.publish.outputs.gem_exec_path }}
          zip cfn_nag cfn_nag cfn_nag_rules cfn_nag_scan
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.publish.outputs.cfn_nag_version }}
          release_name: v${{ steps.publish.outputs.cfn_nag_version }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # `upload_url` pulls from the CREATE RELEASE step above, referencing its ID to get the outputs object, which includes a `upload_url`.
          # See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.publish.outputs.gem_exec_path }}/cfn_nag.zip
          asset_name: cfn_nag.zip
          asset_content_type: application/zip
      - name: Trigger homebrew-tap repo workflow
        run: |
          curl -s -XPOST -u "cfn_nag-bot:${{secrets.homebrew_tap_bot}}" \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Content-Type: application/json" \
          https://api.github.com/repos/stelligent/homebrew-tap/dispatches \
          --data '{"event_type": "build_application"}'
